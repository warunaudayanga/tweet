#file: noinspection UndefinedAction
# file: .github/workflows/deploy.yml
name: Deploy to EC2 via Docker Compose

on:
  push:
    branches:
      - release  # Trigger deployment on push to release branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub-hosted runner

    steps:
      # Step 1: Checkout your repository code (optional)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Clone or update repo on EC2
      - name: Clone or update repo on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_SSH_USER }}
            if [ ! -d "tweet/.git" ]; then
              git clone https://github.com/warunaudayanga/tweet.git
            else
              cd tweet
              git pull origin main
            fi

      # Step 3: Copy .env file to project directory on EC2
      - name: Copy .env file to project directory on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cp /home/${{ secrets.EC2_SSH_USER }}/.env /home/${{ secrets.EC2_SSH_USER }}/tweet/.env

      # Step 4: Clean up old Docker containers and volumes on EC2
      - name: Clean up old Docker containers and volumes on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_SSH_USER }}/tweet
            docker compose down --volumes --remove-orphans
            docker system prune -af --volumes

      # Step 5: Pull latest Docker images on EC2
      - name: Pull latest Docker images on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_SSH_USER }}/tweet
            docker compose pull

      # Step 6: Build and start Docker containers on EC2
      - name: Build and start Docker containers on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_SSH_USER }}/tweet
            docker compose up -d --build
