version: "3.9"

services:
  gateway:
    build:
      context: .
      dockerfile: apps/tweet-gateway/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - migration-runner
      - user-ms
      - tweet-ms
      - redis
    environment:
      NODE_ENV: production
    env_file:
      - docker.env
      # add env vars
    networks:
      - tweet-net

  user-ms:
    build:
      context: .
      dockerfile: apps/user-ms/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - migration-runner
    environment:
      NODE_ENV: production
    env_file:
      - docker.env
    networks:
      - tweet-net

  tweet-ms:
    build:
      context: .
      dockerfile: apps/tweet-ms/Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - migration-runner
    environment:
      NODE_ENV: production
    env_file:
      - docker.env
    networks:
      - tweet-net

  migration-runner:
    image: node:18
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - postgres
    command: sh -c "npm install && npm run migration:run"
    env_file:
      - docker.env
    networks:
      - tweet-net

  postgres:
    image: bitnami/postgresql:13
    environment:
      - POSTGRESQL_USERNAME=tweets
      - POSTGRESQL_PASSWORD=root
      - POSTGRESQL_DATABASE=tweets
    volumes:
      - postgres-data:/bitnami/postgresql
    ports:
      - "5433:5432"
    networks:
      - tweet-net

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - tweet-net

networks:
  tweet-net:
    driver: bridge

volumes:
  postgres-data:
